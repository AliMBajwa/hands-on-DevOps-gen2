---
  # Configure pyenv across Bash, Zsh and fish
  #
  - name: Ensure Bash is configured to use pyenv 
    block:
      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.bash_profile'
          regexp: '{{ item.regexp }}'
          state: absent
        with_items:
          - { regexp: '^export PYENV_ROOT' }
          - { regexp: '^export PATH="\\$PYENV_ROOT/bin:\\$PATH"$' }
          - { regexp: '^export PATH="\\$HOME/.local/bin:\\$PATH"$' }
          - { regexp: '^eval "\\$\\(pyenv init --path\\)"$' }
          - { regexp: '^eval "\\$\\(pyenv init -\\)"$' }

      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.bash_profile'
          line: '{{ item.line }}'
          insertafter: EOF
        with_items:
          - { line: 'export PYENV_ROOT="$HOME/.pyenv"' }
          - { line: 'export PATH="$PYENV_ROOT/bin:$PATH"' }
          - { line: 'export PATH="$HOME/.local/bin:$PATH"' }
          - { line: 'eval "$(pyenv init --path)"' }
          - { line: 'eval "$(pyenv init -)"' }

  - name: Ensure Zsh is configured to used pyenv 
    block:
      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.zshrc'
          regexp: '{{ item.regexp }}'
          state: absent
        with_items:
          - { regexp: '^export PYENV_ROOT' }
          - { regexp: '^export PATH="\\$PYENV_ROOT/bin:\\$PATH"$' }
          - { regexp: '^export PATH="\\$HOME/.local/bin:\\$PATH"$' }
          - { regexp: '^eval "\\$\\(pyenv init --path\\)"$' }
          - { regexp: '^eval "\\$\\(pyenv init -\\)"$' }

      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.zshrc'
          line: '{{ item.line }}'
          insertafter: EOF
        with_items:
          - { line: 'export PYENV_ROOT="$HOME/.pyenv"' }
          - { line: 'export PATH="$PYENV_ROOT/bin:$PATH"' }
          - { line: 'export PATH="$HOME/.local/bin:$PATH"' }
          - { line: 'eval "$(pyenv init --path)"' }
          - { line: 'eval "$(pyenv init -)"' }

  - name: Ensure fish is configured to used pyenv
    block:
      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.config/fish/config.fish'
          regexp: '{{ item.regexp }}'
          state: absent
        with_items:
          - { regexp: '^set -Ux PYENV_ROOT' }
          - { regexp: '^set -U fish_user_paths \\$PYENV_ROOT/bin \\$fish_user_paths$' }
          - { regexp: '^set -U fish_user_paths \\$HOME/.local/bin \\$fish_user_paths$' }
          - { regexp: '^status is-interactive; and pyenv init --path | source$' }
          - { regexp: '^pyenv init - | source$' }

      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.config/fish/config.fish'
          line: '{{ item.line }}'
          insertafter: EOF
        with_items:
           - { line: 'set -Ux PYENV_ROOT $HOME/.pyenv' }
           - { line: 'set -U fish_user_paths $PYENV_ROOT/bin $fish_user_paths' }
           - { line: 'set -U fish_user_paths $HOME/.local/bin $fish_user_paths' }
           - { line: 'status is-interactive; and pyenv init --path | source' }
           - { line: 'pyenv init - | source' }
