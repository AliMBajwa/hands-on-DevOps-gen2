---
- name: Ensure rvm and latest Ruby is installed
  hosts: factory

  tasks:
    - name: When macOSX ensure needed HomeBrew packages are installed to download and build Ruby via rvm
      block:
        - name: Install rvm dependencies
          community.general.homebrew:
            name:
              - curl
              - automake
              - coreutils
              - libksba
              - zlib
              - gnupg
            state: latest
          retries: "{{ default_retries }}"
          delay: "{{ default_delay }}"
          register: result
          until: result is succeeded

        - ansible.builtin.set_fact:
            GPG_BINARY: "gpg"
      when: ( ansible_distribution == 'MacOSX' )

    - name: When Archlinux ensure rvm dependencies are installed via pacman
      block:
        - name: Install rvm dependencies
          community.general.pacman:
            name:
              - base-devel
              - tar
              - gzip
              - diffutils
              - git
              - curl
              - gnupg
            state: latest
          retries: "{{ default_retries }}"
          delay: "{{ default_delay }}"
          register: result
          until: result is succeeded
          become: yes

        - ansible.builtin.set_fact:
            GPG_BINARY: "gpg2"
      when: ( ansible_distribution == 'Archlinux' )


    - name: When Rocky 8 ensure rvm dependencies are installed via dnf
      block:
        - name: Install rvm dependencies
          ansible.builtin.dnf:
            name:
              - '@Development tools' 
              - wget
              - patch
              - bzip2 
              - openssl-devel 
              - libffi-devel 
              - readline-devel 
              - zlib-devel 
              - gdbm-devel 
              - ncurses-devel
              - openssl-devel
              - sqlite-devel
              - gnupg
            state: latest
          retries: "{{ default_retries }}"
          delay: "{{ default_delay }}"
          register: result
          until: result is succeeded
          become: yes

        - ansible.builtin.set_fact:
            GPG_BINARY: "gpg2"
      when: ( ansible_distribution == 'Rocky' )

    - name: Install rvm's keys
      ansible.builtin.shell: bash -c "curl -sSL https://rvm.io/mpapis.asc | {{ GPG_BINARY }} --import - && curl -sSL https://rvm.io/pkuczynski.asc | {{ GPG_BINARY }} --import -"

    - name: Ensure rvm is installed
      ansible.builtin.shell: bash -c 'curl -sSL https://get.rvm.io | bash -s stable'

    - ansible.builtin.debug:
        msg: Bash and Zsh shells will be configured by default by rvm.

    - name: Download and install fish function for rvm, so that rvm will work in fish
      ansible.builtin.shell: bash -c 'curl -s -L --create-dirs -o ~/.config/fish/functions/rvm.fish https://raw.github.com/lunks/fish-nuggets/master/functions/rvm.fish'

    - ansible.builtin.debug:
        msg: Building and installing the ruby {{ ruby_version }} will take some time...

    - name: Installing ruby {{ ruby_version }}
      ansible.builtin.shell: bash -c '[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" && rvm install ruby-{{ ruby_version }}'

    - name: Set {{ ruby_version }} as the default for new shells. This will override the 'system' Ruby
      ansible.builtin.shell: bash -c '[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" && rvm use {{ ruby_version }} --default'
