---
  - name: Set fact for $HOME
    ansible.builtin.set_fact:
      HOME:  "{{ lookup('env', 'HOME') }}"

  - name: When MacOSX ensure pyenv Homebrew package is installed
    block:
      - name: Update homebrew and upgrade all packages
        community.general.homebrew:
          update_homebrew: yes
          upgrade_all: yes

      - name: Ensure pyenv HomeBrew packages are installed
        community.general.homebrew:
          name: pyenv
          state: latest
        retries: '{{ default_retries }}'
        delay: '{{ default_delay }}'
        register: result
    when: ( ansible_distribution == 'MacOSX' )

  - name: When Archlinux ensure pyenv pacman package is installed
    block:
      - name: Update pacman and upgrade all packages
        community.general.pacman:
          update_cache: yes
          upgrade: yes
        become: yes

      - name: Ensure pacman packages are installed
        community.general.pacman:
          name: pyenv
          state: latest
        retries: '{{ default_retries }}'
        delay: '{{ default_delay }}'
        register: result
        until: result is succeeded
        become: yes
    when: ( ansible_distribution == 'Archlinux' )
 
  # Configure pyenv across Bash, Zsh and fish
  #
  - name: Ensure pyenv is configured in Bash
    block:
      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.bash_profile'
          regexp: '{{ item.regexp }}'
          state: absent
        with_items:
          - { regexp: '^export PYENV_ROOT' }
          - { regexp: '^export PATH="\\$PYENV_ROOT/bin:\\$PATH"$' }
          - { regexp: '^export PATH="\\$HOME/.local/bin:\\$PATH"$' }
          - { regexp: '^eval "\\$\\(pyenv init --path\\)"$' }
          - { regexp: '^eval "\\$\\(pyenv init -\\)"$' }

      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.bash_profile'
          line: '{{ item.line }}'
          insertafter: EOF
        with_items:
          - { line: 'export PYENV_ROOT="$HOME/.pyenv"' }
          - { line: 'export PATH="$PYENV_ROOT/bin:$PATH"' }
          - { line: 'export PATH="$HOME/.local/bin:$PATH"' }
          - { line: 'eval "$(pyenv init --path)"' }
          - { line: 'eval "$(pyenv init -)"' }

  - name: Ensure pyenv is configured in Zsh 
    block:
      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.zshrc'
          regexp: '{{ item.regexp }}'
          state: absent
        with_items:
          - { regexp: '^export PYENV_ROOT' }
          - { regexp: '^export PATH="\\$PYENV_ROOT/bin:\\$PATH"$' }
          - { regexp: '^export PATH="\\$HOME/.local/bin:\\$PATH"$' }
          - { regexp: '^eval "\\$\\(pyenv init --path\\)"$' }
          - { regexp: '^eval "\\$\\(pyenv init -\\)"$' }

      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.zshrc'
          line: '{{ item.line }}'
          insertafter: EOF
        with_items:
          - { line: 'export PYENV_ROOT="$HOME/.pyenv"' }
          - { line: 'export PATH="$PYENV_ROOT/bin:$PATH"' }
          - { line: 'export PATH="$HOME/.local/bin:$PATH"' }
          - { line: 'eval "$(pyenv init --path)"' }
          - { line: 'eval "$(pyenv init -)"' }

  - name: Ensure pyenv is configured in fish
    block:
      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.config/fish/config.fish'
          regexp: '{{ item.regexp }}'
          state: absent
        with_items:
          - { regexp: '^set -Ux PYENV_ROOT' }
          - { regexp: '^set -U fish_user_paths \\$PYENV_ROOT/bin \\$fish_user_paths$' }
          - { regexp: '^set -U fish_user_paths \\$HOME/.local/bin \\$fish_user_paths$' }
          - { regexp: '^status is-interactive; and pyenv init --path | source$' }
          - { regexp: '^pyenv init - | source$' }

      - ansible.builtin.lineinfile:
          dest: '{{ HOME }}/.config/fish/config.fish'
          line: '{{ item.line }}'
          insertafter: EOF
        with_items:
           - { line: 'set -Ux PYENV_ROOT $HOME/.pyenv' }
           - { line: 'set -U fish_user_paths $PYENV_ROOT/bin $fish_user_paths' }
           - { line: 'set -U fish_user_paths $HOME/.local/bin $fish_user_paths' }
           - { line: 'status is-interactive; and pyenv init --path | source' }
           - { line: 'pyenv init - | source' }

  - name: Install latest Python3 into user space
    ansible.builtin.shell: bash -c "source ~/.bash_profile && pyenv install --force $(pyenv install --list | grep -v - | grep -v b | tail -1) && pyenv global $(pyenv install --list | grep -v - | grep -v b | tail -1)"
