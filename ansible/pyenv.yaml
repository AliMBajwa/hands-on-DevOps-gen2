---
- name: Ensure pyenv and latest python is installed
  hosts: factory

  tasks:
    - name: When MacOSX ensure pyenv Homebrew package is installed
      block:
        - name: Update homebrew and upgrade all packages
          community.general.homebrew:
            update_homebrew: yes
            upgrade_all: yes

        - name: Ensure pyenv HomeBrew packages are installed
          community.general.homebrew:
            name: pyenv
            state: latest
          retries: "{{ default_retries }}"
          delay: "{{ default_delay }}"
          register: result
      when: ( ansible_distribution == 'MacOSX' )

    - name: When Archlinux ensure pyenv pacman package is installed
      block:
        - name: Update pacman and upgrade all packages
          community.general.pacman:
            update_cache: yes
            upgrade: yes
          become: yes

        - name: Ensure pacman packages are installed
          community.general.pacman:
            name: pyenv
            state: latest
          retries: "{{ default_retries }}"
          delay: "{{ default_delay }}"
          register: result
          until: result is succeeded
          become: yes
      when: ( ansible_distribution == 'Archlinux' )

    - name: When Rocky 8 ensure pyenv is installed
      block:
        - name: Get stat for {{ HOME }}/.pyenv
          ansible.builtin.stat:
            path: "{{ HOME }}/.pyenv"
          register: st

        - name : Install pyenv via script 
          ansible.builtin.shell: |
            curl https://pyenv.run | bash
          when: not st.stat.exists
      when: ( ansible_distribution == 'Rocky' )

    - name: Install latest Python3 into user space
      ansible.builtin.shell: |
        export PYENV_ROOT="$HOME/.pyenv"; export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"
        pyenv install --force $(pyenv install --list | grep -v - | grep -v b | tail -1)
        pyenv global $(pyenv install --list | grep -v - | grep -v b | tail -1)
      args:
        executable: /bin/bash

    - name: Ensure pynvim python module is installed for coc-pyright
      ansible.builtin.shell: |
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"
        python3 -m pip install --user --upgrade wheel
      args:
        executable: /bin/bash
      when: ( ansible_distribution == 'Archlinux' )
